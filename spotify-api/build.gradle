
apply plugin: 'com.android.library'
//apply plugin: 'com.github.dcendents.android-maven'





dependencies {

    implementation('com.squareup.retrofit:retrofit:1.9.0')

    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.squareup.okhttp:okhttp:2.2.0'

    testImplementation("org.junit.jupiter:junit-jupiter-api:5.0.0")
    androidTestImplementation("org.junit.jupiter:junit-jupiter-engine:5.0.0")
// to run JUnit 3/4 tests:
    testImplementation("junit:junit:4.12")
    androidTestImplementation("org.junit.vintage:junit-vintage-engine:4.12.0")
}
buildscript {

    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.2.1'

    }
}

android {
    compileSdkVersion 23
    buildToolsVersion '28.0.3'

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 23

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            testCoverageEnabled = true
        }
    }
}

android.testOptions.unitTests.all {
    // Configure includes / excludes
    include '**/*Test.class'
    exclude '**/espresso/**/*.class'

    maxHeapSize = '2048m'
    jvmArgs '-XX:MaxPermSize=512m', '-XX:-UseSplitVerifier'
    maxParallelForks = 4
    forkEvery = 150

    afterTest { descriptor, result ->
        println "Executing test for ${descriptor.name} with result: ${result.resultType}"
    }
}